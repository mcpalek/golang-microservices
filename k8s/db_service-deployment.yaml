apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-service
  template:
    metadata:
      labels:
        app: db-service
    spec:
      imagePullSecrets:
        - name: acr-secret 
      containers:
        - name: db-service
          image: golang.azurecr.io/db_service:448
          imagePullPolicy: Always
          ports:
            - containerPort: 1433
          envFrom:
            - configMapRef:
                name: sqlserver-env
          env:
            - name: SQL_SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sqlserver-secret
                  key: SQL_SERVER_PASSWORD
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          livenessProbe:
            tcpSocket:
              port: 1433
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 1433
            initialDelaySeconds: 15
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  selector:
    app: db-service
  ports:
    - protocol: TCP
      port: 1433  # Exposes the SQL Server port
      targetPort: 1433  # Container port where SQL Server is listening
  type: ClusterIP  # Ostavio sam ga da bude ClusterIP na taj nachin pristup bazi je moguch samo iz clustera a ne i spolja Exposes the service within the cluster
