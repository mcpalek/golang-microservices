trigger:
  branches:
    include:
      - main

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    # Build and push db_service
    - task: Docker@2
      inputs:
        command: buildAndPush
        containerRegistry: 'MyAzureContainerRegistry'
        repository: 'db_service'
        dockerfile: 'db_service/Dockerfile'
        buildContext: $(Build.SourcesDirectory)
        tags: latest

    # Build and push web_service
    - task: Docker@2
      inputs:
        command: buildAndPush
        containerRegistry: 'MyAzureContainerRegistry'
        repository: 'web_service'
        dockerfile: 'web_service/Dockerfile'
        buildContext: $(Build.SourcesDirectory)
        tags: latest

    # Build and push frontend_service
    - task: Docker@2
      inputs:
        command: buildAndPush
        containerRegistry: 'MyAzureContainerRegistry'
        repository: 'frontend_service'
        dockerfile: 'frontend_service/Dockerfile'
        buildContext: $(Build.SourcesDirectory)
        tags: latest
- stage: Deploy
  jobs:
  - job: Deploy
    steps:
    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'kubeconfig.yaml'

    - script: |
        chmod 600 $(Agent.TempDirectory)/kubeconfig.yaml
        export KUBECONFIG=$(Agent.TempDirectory)/kubeconfig.yaml
        kubectl config view
        kubectl get nodes
      displayName: 'Set Kubeconfig and Verify Cluster Access'

    - script: |
        export KUBECONFIG=$(Agent.TempDirectory)/kubeconfig.yaml
        kubectl apply -f k8s/
      displayName: 'Apply Kubernetes Manifests'
# - stage: Deploy
#   jobs:
#   - job: Deploy
#     steps:
#     # Download the kubeconfig.yaml from secure files
#     - task: DownloadSecureFile@1
#       inputs:
#         secureFile: 'kubeconfig.yaml'

#     # Set KUBECONFIG environment variable to point to the downloaded kubeconfig
#     - script: |
#         #export KUBECONFIG=$(System.DefaultWorkingDirectory)/_temp/kubeconfig.yaml
#         export KUBECONFIG=$(Agent.TempDirectory)/kubeconfig.yaml
#         sudo kubectl get nodes
#       displayName: 'Set Kubeconfig and Verify Cluster Access'

#     # Deploy the Kubernetes resources
#     - task: Kubernetes@1
#       inputs:
#         connectionType: 'KubeConfig'
#         kubeconfig: '$(System.DefaultWorkingDirectory)/_temp/kubeconfig.yaml'
#         command: 'apply'
#         arguments: '-f k8s/'
